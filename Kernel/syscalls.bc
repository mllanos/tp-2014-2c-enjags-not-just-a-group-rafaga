
Stack Exchange
sign up log in tour help careers 2.0

Stack Overflow

    Questions
    Tags
    Users
    Badges
    Unanswered

    Ask Question

Take the 2-minute tour ×
Stack Overflow is a question and answer site for professional and enthusiast programmers. It's 100% free, no registration required.
Easiest way to get file's contents in C
up vote 13 down vote favorite
6
	

What is the simplest way (least error-prone, least lines of code, however you want to interpret it) to open a file in C and read its contents into a string (char*, char[], whatever)?
c string file
share|improve this question
	
asked Oct 6 '08 at 14:32
Chris Bunch
27.1k2280110
	
2 	 
	
"simplest way" and "least error-prone" are often opposites of each other. –  Andy Lester Oct 6 '08 at 14:37
1 	 
	
"simplest way" and "least error prone" are actually synonymous in my book. For example, the answer in C# is string s = File.ReadAllText(filename);. How could that be simpler and more error prone? –  Mark Lakata Apr 7 at 19:54
add a comment
5 Answers
active oldest votes
up vote 25 down vote accepted
	

I tend to just load the entire buffer as a raw memory chunk into memory and do the parsing on my own. That way I have best control over what the standard lib does on multiple platforms.

This is a stub I use for this. you may also want to check the error-codes for fseek, ftell and fread. (omitted for clarity).

char * buffer = 0;
long length;
FILE * f = fopen (filename, "rb");

if (f)
{
  fseek (f, 0, SEEK_END);
  length = ftell (f);
  fseek (f, 0, SEEK_SET);
  buffer = malloc (length);
  if (buffer)
  {
    fread (buffer, 1, length, f);
  }
  fclose (f);
}

if (buffer)
{
  // start to process your data / extract strings here...
}

share|improve this answer
	
answered Oct 6 '08 at 14:37
Nils Pipenbrinck
41.9k1297165
	
   	 
	
Awesome, that worked like a charm (and is pretty simple to follow along). Thanks! –  Chris Bunch Oct 6 '08 at 14:43
   	 
	
I would also check the return value of fread, since it might not actually read the entire file due to errors and what not. –  freespace Oct 6 '08 at 14:45
   	 
	
Along the lines of what freespace said, you might want to check to ensure the file isn't huge. Suppose, for instance, that someone decided to feed a 6GB file into that program... –  rmeador Oct 6 '08 at 14:46
1 	 
	
True. For large files this solution sucks. –  Nils Pipenbrinck Oct 6 '08 at 15:52
1 	 
	
I haven't suggested using stat simply because it's not ANSI C. (At least I think so). Afaik the "recommended" way to get a file-size is to seek to the end and get the file offset. –  Nils Pipenbrinck Oct 6 '08 at 15:53
show 6 more comments
up vote 6 down vote
	

Another, unfortunately highly OS-dependent, solution is memory mapping the file. The benefits generally include performance of the read, and reduced memory use as the applications view and operating systems file cache can actually share the physical memory.

POSIX code would look like:

    int fd = open("filename", O_RDONLY);
    int len = lseek(fd, 0, SEEK_END);
    void *data = mmap(0, len, PROT_READ, MAP_PRIVATE, fd, 0);

Windows on the other hand is little more tricky, and unfortunately I don't have a compiler in front of me to test, but the functionality is provided by CreateFileMapping() and MapViewOfFile().
share|improve this answer
	
answered Oct 6 '08 at 15:37
Jeff Mc
1,7711921
	
add a comment
up vote 4 down vote
	

If "read its contents into a string" means that the file does not contain characters with code 0, you can also use getdelim() function, that either accepts a block of memory and reallocates it if necessary, or just allocates the entire buffer for you, and reads the file into it until it encounters a specified delimiter or end of file. Just pass '\0' as the delimiter to read the entire file.

This function is available in the GNU C Library, http://www.gnu.org/software/libc/manual/html_mono/libc.html#index-getdelim-994

The sample code might look as simple as

char* buffer = NULL;
ssize_t bytes_read = getdelim( &buffer, 0, '\0', fp);
if ( bytes_read != -1) {
  /* Success, now the entire file is in the buffer */

share|improve this answer
	
answered Oct 6 '08 at 15:24
dmityugov
2,876914
	
   	 
	
I've used this before! It works very nicely, assuming the file you're reading is text (does not contain \0). –  ephemient Oct 6 '08 at 16:34
add a comment
up vote 2 down vote
	

If the file is text, and you want to get the text line by line, the easiest way is to use fgets().

char buffer[100];
FILE *fp = fopen("filename", "r");                 // do not use "rb"
while (fgets(buffer, sizeof(buffer), fp)) {
... do something
}
fclose(fp);

share|improve this answer
	
answered Oct 8 '08 at 21:02
selwyn
6412716
	
add a comment
up vote 1 down vote
	

If you are reading special files like stdin or a pipe, you are not going to be able to use fstat to get the file size beforehand. Also, if you are reading a binary file fgets is going to lose the string size information because of embedded '\0' characters. Best way to read a file then is to use read and realloc:

#include <stdio.h>
#include <unistd.h>
#include <errno.h>
#include <string.h>

int main () {
    char buf[4096];
    ssize_t n;
    char *str = NULL;
    size_t len = 0;
    while (n = read(STDIN_FILENO, buf, sizeof buf)) {
        if (n < 0) {
            if (errno == EAGAIN)
                continue;
            perror("read");
            break;
        }
        str = realloc(str, len + n + 1);
        memcpy(str + len, buf, n);
        len += n;
        str[len] = '\0';
    }
    printf("%.*s\n", len, str);
    return 0;
}

share|improve this answer
	
edited Nov 25 '13 at 3:16

	
answered Nov 24 '13 at 19:40
Jake
591512
	
   	 
	
This worked like a charm! Thanks for posting @Jake –  Wes Jul 15 at 3:04
add a comment
Your Answer

 
Sign up or log in

Sign up using Google

Sign up using Facebook

Sign up using Stack Exchange
Post as a guest
Name
Email

By posting your answer, you agree to the privacy policy and terms of service.
Not the answer you're looking for? Browse other questions tagged c string file or ask your own question.

asked
	

5 years ago

viewed
	

8844 times

active
	

9 months ago

Get the weekly newsletter!

    Top questions and answers
    Important announcements
    Unanswered questions

see an example newsletter
Linked
5
How can I load a whole file into a string in C
-2
Read entire file contents in shortest possible way ( and hassle free way ) in C
2
Unexpected output copying file in C
0
replace bytes in file c
1
File get contents in C
1
How can i split a txt file which contains ;s in C?
Related
161
How can I get a file's size in C?
430
How to create a Java String from the contents of a file?
108
How do I get the directory from a file's full path?
5
How can I load a whole file into a string in C
0
What is the best, cross platfrom, way to parse a text file?
-2
How can I obtain a file's size in C?
-2
Read entire file contents in shortest possible way ( and hassle free way ) in C
0
How is the best way to completely change a file content in C?
0
Reading the contents from a file
0
File content to big string
Hot Network Questions

    How many tuples of numbers from [1..n] have the sum of its elements equal to n?
    How do we know that hydrogen gas consists of two hydrogen atoms?
    Spatial Locality in Cache - Which addresses are loaded?
    Letter or A4: which is a more sensible default?
    Typical behavior and habits via the present simple and "will"
    Why would clipping a wire cause a bomb to explode?
    Which rule to follow for defining an intersection as an ordered pair of streets?
    Is there actually a reason why overloaded && and || don't short circuit?
    How do jet fighters get to war?
    Is it safe to download and burn a CD on an infected PC?
    Why does the caps lock key have a down arrow as its icon?
    Why did Windows add a pointer trail feature?
    When can a person be called a PhD ABD?
    Why can I see my breath after I pop my ears?
    Does the series converge or diverge?
    What does よう at the end of the sentences mean
    What is the correct expression to exactly divide \textheight into n rows?
    How bad is it really to install Linux on one big partition?
    What does nut shell mean in this context?
    What can I do to paper to make it look aged?
    "Quyer" When and why did the spelling change so drastically?
    Maple vs. Mathematica
    1700s term for "a technology"
    Workaround mysterious bug, involving minitoc, twocolumns, and abstract

question feed
tour help badges blog chat data legal privacy policy work here advertising info mobile contact us feedback
Technology 	Life / Arts 	Culture / Recreation 	Science 	Other

    Stack Overflow
    Server Fault
    Super User
    Web Applications
    Ask Ubuntu
    Webmasters
    Game Development
    TeX - LaTeX

	

    Programmers
    Unix & Linux
    Ask Different (Apple)
    WordPress Development
    Geographic Information Systems
    Electrical Engineering
    Android Enthusiasts
    Information Security

	

    Database Administrators
    Drupal Answers
    SharePoint
    User Experience
    Mathematica
    Salesforce
    more (13)

	

    Photography
    Science Fiction & Fantasy
    Graphic Design
    Seasoned Advice (cooking)
    Home Improvement
    Personal Finance & Money
    Academia
    more (10)

	

    English Language & Usage
    Skeptics
    Mi Yodeya (Judaism)
    Travel
    Christianity
    Arqade (gaming)
    Bicycles
    Role-playing Games
    more (21)

	

    Mathematics
    Cross Validated (stats)
    Theoretical Computer Science
    Physics
    MathOverflow
    more (7)

	

    Stack Apps
    Meta Stack Exchange
    Area 51
    Stack Overflow Careers

site design / logo © 2014 stack exchange inc; user contributions licensed under cc by-sa 3.0 with attribution required
rev 2014.9.19.1876
